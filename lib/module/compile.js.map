{"version":3,"sources":["compile.ts"],"names":["compareNumbers","getKeyframesStylesProperties","getKeyframeStyles","getKeyframeStylesProperties","notNull","parsePosition","DEFAULT_DURATION","getKeyframeSequenceItems","definition","keyframe","previousKeyframe","keyframeStyles","properties","reduce","acc","property","value","type","duration","compile","keyframes","Object","keys","map","filter","length","Error","sort","getDefinitionKeyframeStyles","definitionKeyframesStyles","definitionProperties","from","config","animate","i","filtredKeyframes","keyframeSequenceItems","forEach","sequenceItem","flat","delay","result","transition","repeat","easing","style","cache","Map","compileAnimation","cachedBuilder","get","builder","set"],"mappings":"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","sourcesContent":["import { MotifiableDefinition, MotifiableBuilder, StyleValues, MotifiableProps } from './types'\nimport { compareNumbers, getKeyframesStylesProperties, getKeyframeStyles, getKeyframeStylesProperties, notNull, parsePosition } from './utils'\n\nconst DEFAULT_DURATION = 1000\n\nconst getKeyframeSequenceItems = (\n  definition: MotifiableDefinition,\n  keyframe: number,\n  previousKeyframe: number): Partial<Record<keyof StyleValues, Record<string, any>>> => {\n  const keyframeStyles = getKeyframeStyles(definition)(keyframe)\n\n  const properties = getKeyframeStylesProperties(keyframeStyles)\n\n  return properties.reduce((acc, property) => {\n    return {\n      ...acc,\n      [property]: {\n        value: keyframeStyles[property],\n        type: 'timing',\n        duration: keyframe - previousKeyframe\n      }\n    }\n  }, {})\n}\n\nconst compile = (definition: MotifiableDefinition): MotifiableBuilder => {\n  const keyframes = Object.keys(definition)\n    .map(parsePosition)\n    .filter(notNull) as number[]\n\n  if (keyframes.length < 2) {\n    throw new Error('Animation definitions must have at least two values.')\n  }\n\n  keyframes.sort(compareNumbers)\n\n  const getDefinitionKeyframeStyles = getKeyframeStyles(definition)\n\n  const definitionKeyframesStyles = keyframes.map(getDefinitionKeyframeStyles)\n  const definitionProperties = getKeyframesStylesProperties(definitionKeyframesStyles)\n\n  const from = getDefinitionKeyframeStyles(0) as MotifiableProps['from']\n\n  return (config) => {\n    const animate = keyframes\n      .filter(keyframe => keyframe !== 0)\n      .map((keyframe, i, filtredKeyframes) =>\n        getKeyframeSequenceItems(definition, keyframe, filtredKeyframes[i - 1] ?? 0)\n      )\n      .reduce((acc, keyframeSequenceItems) => {\n        definitionProperties.forEach(property => {\n          const sequenceItem = keyframeSequenceItems[property]\n          if (sequenceItem == null) return\n\n          sequenceItem.duration *= config?.duration ?? DEFAULT_DURATION\n\n          if (acc[property] != null) {\n            acc[property] = [acc[property], sequenceItem].flat()\n            return\n          }\n\n          if (config?.delay != null) {\n            sequenceItem.delay = config.delay\n          }\n\n          acc[property] = sequenceItem\n        })\n        return acc\n      }, {}) as MotifiableProps['animate']\n\n    const result: MotifiableProps = {\n      from,\n      animate,\n      transition: {}\n    }\n\n    if (config?.repeat != null) {\n      result.transition.repeat = config.repeat\n    }\n\n    if (definition.easing != null) {\n      result.transition.easing = definition.easing\n    }\n\n    if (definition.style != null) {\n      result.style = definition.style\n    }\n\n    return result\n  }\n}\nconst cache = new Map<MotifiableDefinition, MotifiableBuilder>()\n\nexport const compileAnimation = (definition: MotifiableDefinition): MotifiableBuilder => {\n  const cachedBuilder = cache.get(definition)\n\n  if (cachedBuilder != null) {\n    return cachedBuilder\n  }\n\n  const builder = compile(definition)\n  cache.set(definition, builder)\n\n  return builder\n}\n"]}