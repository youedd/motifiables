{"version":3,"sources":["utils.ts"],"names":["compareNumbers","a","b","notNull","value","parsePosition","parsed","parseFloat","Number","isNaN"],"mappings":"AAAA,OAAO,MAAMA,cAAc,GAAG,CAACC,CAAD,EAAYC,CAAZ,KAAkC;AAC9D,SAAOD,CAAC,GAAGC,CAAX;AACD,CAFM;AAIP,OAAO,MAAMC,OAAO,GAAIC,KAAD,IAA6B;AAClD,SAAOA,KAAK,KAAK,IAAjB;AACD,CAFM;AAIP,OAAO,MAAMC,aAAa,GAAID,KAAD,IAAkC;AAC7D,MAAIA,KAAK,KAAK,MAAd,EAAsB;AACpB,WAAO,CAAP;AACD;;AACD,MAAIA,KAAK,KAAK,IAAd,EAAoB;AAClB,WAAO,CAAP;AACD;;AAED,QAAME,MAAM,GAAGC,UAAU,CAACH,KAAD,CAAzB;;AAEA,MAAII,MAAM,CAACC,KAAP,CAAaH,MAAb,KAAwBA,MAAM,GAAG,CAAjC,IAAsCA,MAAM,GAAG,CAAnD,EAAsD;AACpD,WAAO,IAAP;AACD;;AAED,SAAOA,MAAP;AACD,CAfM","sourcesContent":["export const compareNumbers = (a: number, b: number): number => {\n  return a - b\n}\n\nexport const notNull = (value: unknown): boolean => {\n  return value !== null\n}\n\nexport const parsePosition = (value: string): number | null => {\n  if (value === 'from') {\n    return 0\n  }\n  if (value === 'to') {\n    return 1\n  }\n\n  const parsed = parseFloat(value)\n\n  if (Number.isNaN(parsed) || parsed < 0 || parsed > 1) {\n    return null\n  }\n\n  return parsed\n}\n"]}