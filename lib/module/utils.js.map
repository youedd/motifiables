{"version":3,"sources":["utils.ts"],"names":["compareNumbers","a","b","notNull","value","parsePosition","parsed","parseFloat","Number","isNaN","_getKeyframeStyles","definition","position","from","to","getKeyframeStyles","keyframe","Error","getKeyframeStylesProperties","keyframeStyles","Object","keys","getKeyframesStylesProperties","keyframesStyles","Set","map","flat"],"mappings":"AAEA,OAAO,MAAMA,cAAc,GAAG,CAACC,CAAD,EAAYC,CAAZ,KAAkC;AAC9D,SAAOD,CAAC,GAAGC,CAAX;AACD,CAFM;AAIP,OAAO,MAAMC,OAAO,GAAIC,KAAD,IAA6B;AAClD,SAAOA,KAAK,KAAK,IAAjB;AACD,CAFM;AAIP,OAAO,MAAMC,aAAa,GAAID,KAAD,IAAkC;AAC7D,MAAIA,KAAK,KAAK,MAAd,EAAsB;AACpB,WAAO,CAAP;AACD;;AACD,MAAIA,KAAK,KAAK,IAAd,EAAoB;AAClB,WAAO,CAAP;AACD;;AAED,QAAME,MAAM,GAAGC,UAAU,CAACH,KAAD,CAAzB;;AAEA,MAAII,MAAM,CAACC,KAAP,CAAaH,MAAb,KAAwBA,MAAM,GAAG,CAAjC,IAAsCA,MAAM,GAAG,CAAnD,EAAsD;AACpD,WAAO,IAAP;AACD;;AAED,SAAOA,MAAP;AACD,CAfM;;AAiBP,MAAMI,kBAAkB,GAAG,CAACC,UAAD,EAAmCC,QAAnC,KAAwF;AACjH,MAAID,UAAU,CAACC,QAAD,CAAV,IAAwB,IAA5B,EAAkC,OAAOD,UAAU,CAACC,QAAD,CAAjB;AAElC,MAAIA,QAAQ,KAAK,CAAb,IAAkBD,UAAU,CAACE,IAAX,IAAmB,IAAzC,EAA+C,OAAOF,UAAU,CAACE,IAAlB;AAE/C,MAAID,QAAQ,KAAK,CAAb,IAAkBD,UAAU,CAACG,EAAX,IAAiB,IAAvC,EAA6C,OAAOH,UAAU,CAACG,EAAlB;AAE7C,SAAO,IAAP;AACD,CARD;;AAUA,OAAO,MAAMC,iBAAiB,GAAIJ,UAAD,IAAuCC,QAAD,IAAmC;AACxG,QAAMI,QAAQ,GAAGN,kBAAkB,CAACC,UAAD,EAAaC,QAAb,CAAnC;;AAEA,MAAII,QAAQ,IAAI,IAAhB,EAAsB,OAAOA,QAAP;AAEtB,QAAM,IAAIC,KAAJ,CAAU,oDAAV,CAAN;AACD,CANM;AAQP,OAAO,MAAMC,2BAA2B,GAAIC,cAAD,IAA2D;AACpG,SAAOC,MAAM,CAACC,IAAP,CAAYF,cAAZ,CAAP;AACD,CAFM;AAIP,OAAO,MAAMG,4BAA4B,GAAIC,eAAD,IAA8D;AACxG,SAAO,CAAC,GAAG,IAAIC,GAAJ,CAAQD,eAAe,CAACE,GAAhB,CAAoBP,2BAApB,EAAiDQ,IAAjD,EAAR,CAAJ,CAAP;AACD,CAFM","sourcesContent":["import { MotifiableDefinition, StyleValues } from './types'\n\nexport const compareNumbers = (a: number, b: number): number => {\n  return a - b\n}\n\nexport const notNull = (value: unknown): boolean => {\n  return value !== null\n}\n\nexport const parsePosition = (value: string): number | null => {\n  if (value === 'from') {\n    return 0\n  }\n  if (value === 'to') {\n    return 1\n  }\n\n  const parsed = parseFloat(value)\n\n  if (Number.isNaN(parsed) || parsed < 0 || parsed > 1) {\n    return null\n  }\n\n  return parsed\n}\n\nconst _getKeyframeStyles = (definition: MotifiableDefinition, position: number): StyleValues | undefined | null => {\n  if (definition[position] != null) return definition[position]\n\n  if (position === 0 && definition.from != null) return definition.from\n\n  if (position === 1 && definition.to != null) return definition.to\n\n  return null\n}\n\nexport const getKeyframeStyles = (definition: MotifiableDefinition) => (position: number): StyleValues => {\n  const keyframe = _getKeyframeStyles(definition, position)\n\n  if (keyframe != null) return keyframe\n\n  throw new Error('Missing animation keyframe, this should not happen')\n}\n\nexport const getKeyframeStylesProperties = (keyframeStyles: StyleValues): Array<keyof StyleValues> => {\n  return Object.keys(keyframeStyles) as Array<keyof StyleValues>\n}\n\nexport const getKeyframesStylesProperties = (keyframesStyles: StyleValues[]): Array<keyof StyleValues> => {\n  return [...new Set(keyframesStyles.map(getKeyframeStylesProperties).flat())]\n}\n"]}